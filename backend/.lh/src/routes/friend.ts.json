{
    "sourceFile": "src/routes/friend.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1732236904242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1732236904242,
            "name": "Commit-0",
            "content": "import { FastifyInstance } from \"fastify\";\r\nimport axios from \"axios\";\r\nimport { errorHandler } from \"../services/dbErrorHandler\";\r\n\r\ninterface AddFriendRequest {\r\n  userId: string;\r\n  friendId: string;\r\n}\r\n\r\nexport async function friendRoutes(fastify: FastifyInstance) {\r\n  fastify.post<{ Body: AddFriendRequest }>(\r\n    \"/friend/add\",\r\n    {\r\n      schema: {\r\n        tags: [\"friend\"],\r\n        description: \"Add a new friend\",\r\n        security: [{ bearerAuth: [] }],\r\n        body: {\r\n          type: \"object\",\r\n          required: [\"userId\", \"friendId\"],\r\n          properties: {\r\n            userId: { type: \"string\" },\r\n            friendId: { type: \"string\" }\r\n          }\r\n        },\r\n        response: {\r\n          200: {\r\n            type: \"object\",\r\n            properties: {\r\n              message: { type: \"string\" }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    async (request, reply) => {\r\n      try {\r\n        const response = await axios.post(\r\n          process.env.DB_API_URL + \"api/friend/add\",\r\n          request.body\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        errorHandler(error, reply);\r\n      }\r\n    }\r\n  );\r\n\r\n  fastify.get<{ Params: { userId: string } }>(\r\n    \"/friend/:userId\",\r\n    {\r\n      schema: {\r\n        tags: [\"friend\"],\r\n        description: \"Get user's friends\",\r\n        security: [{ bearerAuth: [] }],\r\n        params: {\r\n          type: \"object\",\r\n          properties: {\r\n            userId: { type: \"string\" }\r\n          }\r\n        },\r\n        response: {\r\n          200: {\r\n            type: \"array\",\r\n            items: {\r\n              type: \"object\",\r\n              properties: {\r\n                id: { type: \"string\" },\r\n                name: { type: \"string\" },\r\n                email: { type: \"string\" }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    async (request, reply) => {\r\n      try {\r\n        const response = await axios.get(\r\n          process.env.DB_API_URL + `api/friend/${request.params.userId}`\r\n        );\r\n        return response.data;\r\n      } catch (error) {\r\n        errorHandler(error, reply);\r\n      }\r\n    }\r\n  );\r\n}\r\n"
        }
    ]
}